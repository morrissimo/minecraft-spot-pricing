AWSTemplateFormatVersion: "2010-09-09"
Description: Minecraft Spot Price Server via Docker / ECS
Parameters:
  ECSAMI:
    Description: AWS ECS AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id

  ServerState:
    Type: String
    Description: "Running: A spot instance will launch shortly after setting this parameter; your Minecraft server should start within 5-10 minutes of changing this parameter (once UPDATE_IN_PROGRESS becomes UPDATE_COMPLETE). Stopped: Your spot instance (and thus Minecraft container) will be terminated shortly after setting this parameter."
    Default: Running
    AllowedValues:
      - Running
      - Stopped

  InstanceType:
    Type: String
    Description: "t3.medium is a good cost effective instance, 1 VCPU and 3.75 GB of RAM with moderate network performance. Change at your discretion. https://aws.amazon.com/ec2/instance-types/."
    Default: m5.large

  SpotPrice:
    Type: String
    Description: "A t3.medium shouldn't cost more than a cent per hour. Note: Leave this blank to use on-demand pricing."
    Default: "0.03"

  KeyPairName:
    Type: String
    Description: (Optional - An empty value disables this feature)
    Default: ""

  YourIPv4:
    Type: String
    Description: (Optional - An empty value disables this feature)
    Default: ""

  YourIPv6:
    Type: String
    Description: (Optional - An empty value disables this feature)
    Default: ""

  HostedZoneId:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Minecraft instance starts, supply the hosted zone ID here.
    Default: ""

  RecordName:
    Type: String
    Description: (Optional - An empty value disables this feature) If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Minecraft instance starts, supply the name of the record here (e.g. minecraft.mydomain.com).
    Default: ""

  MinecraftImageTag:
    Type: String
    Description: "Java version (Examples include latest, java8-multiarch, etc) Refer to tag descriptions available here: https://github.com/itzg/docker-minecraft-server)"
    Default: "latest"
    AllowedValues:
      - latest
      - java8-multiarch
      - java11
      - java16
      - multiarch-latest

  MinecraftTypeTag:
    Type: String
    Description: "(Examples include CURSEFORGE, SPIGOT, BUKKIT, TUINITY, etc) Refer to tag descriptions available here: https://github.com/itzg/docker-minecraft-server)"

  CurseForgeModpackS3Bucket:
    Type: String
    Description: "REQUIRED if server type is CURSEFORGE"
    Default: gs-mc

  CurseForgeModpackS3Key:
    Type: String
    Description: "REQUIRED if server type is CURSEFORGE. The prefix/key of the Curseforge modpack server zip, manually downloaded and saved here"

  AdminPlayerNames:
    Type: String
    Description: Op/Administrator Players
    Default: ""

  Difficulty:
    Type: String
    Description: "The game's difficulty"
    Default: normal
    AllowedValues:
      - peaceful
      - easy
      - normal
      - hard

  Whitelist:
    Type: String
    Description: Usernames of your friends
    Default: ""

  MinecraftVersion:
    Type: String
    Description: Server minecraft version
    Default: ""

  Memory:
    Type: String
    Description: How much Memory to allocate for the JVM. Never use more than 75-80% of your server's total memory!
    Default: "6.5G"

  UseAikarsFlags:
    Type: String
    Description: "Enable a set of finely-tuned Java memory & GC optimization flags. Details here https://github.com/itzg/docker-minecraft-server#enable-aikars-flags"
    Default: false
    AllowedValues:
      - true
      - false

  Seed:
    Type: String
    Description: The seed used to generate the world

  MaxPlayers:
    Type: Number
    Description: Max number of players that can connect simultaneously (default 20)
    Default: 20

  ViewDistance:
    Type: Number
    Description: Max view radius (in chunks) the server will send to the client (default 10)
    Default: 10

  GameMode:
    Type: String
    Description: "Options: creative, survival (default), adventure, spectator (v1.8+)"
    Default: survival
    AllowedValues:
      - creative
      - survival
      - adventure
      - spectator

  LevelType:
    Type: String
    Description: "Options: DEFAULT, FLAT, LARGEBIOMES, AMPLIFIED, CUSTOMIZED, BUFFET, BIOMESOP (v1.12-), BIOMESOPLENTY (v1.15+), TERRAFORGED (certain modpacks only!)"
    Default: DEFAULT
    AllowedValues:
      - DEFAULT
      - FLAT
      - LARGEBIOMES
      - AMPLIFIED
      - CUSTOMIZED
      - BUFFET
      - BIOMESOP
      - BIOMESOPLENTY
      - TERRAFORGED

  EnableRollingLogs:
    Type: String
    Description: "By default the log file will grow without limit. Set to true to use a rolling log strategy."
    Default: false
    AllowedValues:
      - true
      - false

  Timezone:
    Type: String
    Description: "Change the server's timezone. Use the canonical name of the format: Area/Location (e.g. America/New_York)"
    Default: "America/New_York"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Essential Configuration
        Parameters:
          - ServerState
          - InstanceType
          - SpotPrice
      - Label:
          default: Server Settings
        Parameters:
          - MinecraftImageTag
      - Label:
          default: Optional Server Settings
        Parameters:
          - MinecraftTypeTag
          - CurseForgeModpackS3Bucket
          - CurseForgeModpackS3Key
          - AdminPlayerNames
          - Difficulty
          - Whitelist
          - MinecraftVersion
          - Memory
          - UseAikarsFlags
          - Seed
          - MaxPlayers
          - ViewDistance
          - GameMode
          - LevelType
          - EnableRollingLogs
          - Timezone
      - Label:
          default: Optional Remote Access (SSH) Configuration
        Parameters:
          - KeyPairName
          - YourIPv4
          - YourIPv6
      - Label:
          default: Optional DNS Configuration
        Parameters:
          - HostedZoneId
          - RecordName
    ParameterLabels:
      ServerState:
        default: "Update this parameter to shut down / start up your Minecraft server as required to save on cost. Takes a few minutes to take effect."
      InstanceType:
        default: "Which instance type? You must make sure this is available in your region! https://aws.amazon.com/ec2/pricing/on-demand/"
      SpotPrice:
        default: "Maximum spot price per hour? Leave blank to disable spot pricing."
      MinecraftImageTag:
        default: "Which version of Java do you want to use to run Minecraft?"
      MinecraftTypeTag:
        default: "Which type of Minecraft do you want to launch?"
      AdminPlayerNames:
        default: "A comma delimited list (no spaces) of player names to be admins"
      Difficulty:
        default: "Which difficulty?"
      Whitelist:
        default: "A comma delimited list (no spaces) of player names"
      MinecraftVersion:
        default: "Minecraft version ie 1.16.3 - if you're running a modpack, make sure to use a compatible Minecraft version"
      KeyPairName:
        default: "If you wish to access the instance via SSH, select a Key Pair to use. https://console.aws.amazon.com/ec2/v2/home?#KeyPairs:sort=keyName"
      YourIPv4:
        default: "If you wish to access the instance via SSH and using IPv4, provide it."
      YourIPv6:
        default: "If you wish to access the instance via SSH and using IPv6, provide it."
      HostedZoneId:
        default: "If you have a hosted zone in Route 53 and wish to update a DNS record whenever your Minecraft instance starts, supply the hosted zone ID here."
      RecordName:
        default: "If you have a hosted zone in Route 53 and wish to set a DNS record whenever your Minecraft instance starts, supply a record name here (e.g. minecraft.mydomain.com)."
      Memory:
        default: "If you wish to increase the Java memory-heap limit of 1GB. Format: <size>[g|G|m|M|k|K]"
      Seed:
        default: "Seed for world generation"
      MaxPlayers:
        default: "Max simultaneous players"
      ViewDistance:
        default: "Max view distance"
      GameMode:
        default: "The Minecraft game mode"
      LevelType:
        default: "Level type for world generation"
      EnableRollingLogs:
        default: "Whether to enable rolling logs"
      Timezone:
        default: "The server's timezone"

Conditions:
  MinecraftTypeTagProvided: !Not [!Equals [!Ref MinecraftTypeTag, ""]]
  CurseForgeModpackS3UrlProvided:
    !And [
      !Equals [!Ref MinecraftTypeTag, "CURSEFORGE"],
      !Not [!Equals [!Ref CurseForgeModpackS3Bucket, ""]],
      !Not [!Equals [!Ref CurseForgeModpackS3Key, ""]],
    ]
  AdminPlayerNamesProvided: !Not [!Equals [!Ref AdminPlayerNames, ""]]
  DifficultyProvided: !Not [!Equals [!Ref Difficulty, ""]]
  WhitelistProvided: !Not [!Equals [!Ref Whitelist, ""]]
  MinecraftVersionProvided: !Not [!Equals [!Ref MinecraftVersion, ""]]
  KeyPairNameProvided: !Not [!Equals [!Ref KeyPairName, ""]]
  IPv4AddressProvided: !Not [!Equals [!Ref YourIPv4, ""]]
  IPv6AddressProvided: !Not [!Equals [!Ref YourIPv6, ""]]
  DnsConfigEnabled:
    !And [
      !Not [!Equals [!Ref HostedZoneId, ""]],
      !Not [!Equals [!Ref RecordName, ""]],
    ]
  SpotPriceProvided: !Not [!Equals [!Ref SpotPrice, ""]]
  MemoryProvided: !Not [!Equals [!Ref Memory, ""]]
  SeedProvided: !Not [!Equals [!Ref Seed, ""]]
  MaxPlayersProvided: !Not [!Equals [!Ref MaxPlayers, ""]]
  ViewDistanceProvided: !Not [!Equals [!Ref ViewDistance, ""]]
  GameModeProvided: !Not [!Equals [!Ref GameMode, ""]]
  LevelTypeProvided: !Not [!Equals [!Ref LevelType, ""]]
  EnableRollingLogsProvided: !Not [!Equals [!Ref EnableRollingLogs, ""]]
  TimezoneProvided: !Not [!Equals [!Ref Timezone, ""]]

Mappings:
  ServerState:
    Running:
      DesiredCapacity: 1
    Stopped:
      DesiredCapacity: 0

Resources:
  # ====================================================
  # BASIC VPC
  # ====================================================

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.100.0.0/26
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: gs-mc

  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: "AWS::Region"
      CidrBlock: !Select [0, !Cidr [10.100.0.0/26, 4, 4]]
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: gs-mc-a

  SubnetARoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetA

  SubnetBRoute:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetB

  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: "AWS::Region"
      CidrBlock: !Select [1, !Cidr [10.100.0.0/26, 4, 4]]
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: gs-mc-b

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: gs-mc

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: gs-mc

  Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  # ====================================================
  # EFS FOR PERSISTENT DATA
  # ====================================================

  EfsSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}-efs"
      GroupDescription: !Sub "${AWS::StackName}-efs"
      SecurityGroupIngress:
        - FromPort: 2049
          ToPort: 2049
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref Ec2Sg
      VpcId: !Ref Vpc

  # ====================================================
  # EfsMinecraftRoot - for core minecraft files
  # ====================================================

  EfsMCRoot:
    Type: AWS::EFS::FileSystem
    Properties: {}

  MountRootA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsMCRoot
      SecurityGroups:
        - !Ref EfsSg
      SubnetId: !Ref SubnetA

  MountRootB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsMCRoot
      SecurityGroups:
        - !Ref EfsSg
      SubnetId: !Ref SubnetB

  # ====================================================
  # EfsMCModpacks - for core minecraft files
  # ====================================================

  EfsMCModpacks:
    Type: AWS::EFS::FileSystem
    Properties: {}

  MountModpacksA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsMCModpacks
      SecurityGroups:
        - !Ref EfsSg
      SubnetId: !Ref SubnetA

  MountModpacksB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsMCModpacks
      SecurityGroups:
        - !Ref EfsSg
      SubnetId: !Ref SubnetB

  # ====================================================
  # INSTANCE CONFIG
  # ====================================================

  Ec2Sg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}-ec2"
      GroupDescription: !Sub "${AWS::StackName}-ec2"
      SecurityGroupIngress:
        - !If
          - IPv4AddressProvided
          - FromPort: 22
            ToPort: 22
            IpProtocol: tcp
            CidrIp: !Sub "${YourIPv4}/32"
          - !Ref "AWS::NoValue"
        - !If
          - IPv6AddressProvided
          - FromPort: 22
            ToPort: 22
            IpProtocol: tcp
            CidrIpv6: !Sub "${YourIPv6}/128"
          - !Ref "AWS::NoValue"
        - FromPort: 25565
          ToPort: 25565
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      VpcId: !Ref Vpc

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref ECSAMI
      InstanceType: !Ref InstanceType
      KeyName: !If [KeyPairNameProvided, !Ref KeyPairName, !Ref "AWS::NoValue"]
      SecurityGroups:
        - !Ref Ec2Sg
      SpotPrice: !If [SpotPriceProvided, !Ref SpotPrice, !Ref "AWS::NoValue"]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          # update everything
          yum update -y
          yum clean all -y

          # install AWS stuff
          yum install -y amazon-efs-utils
          yum install -y unzip wget vim
          pip3 install awscli --no-input

          # configure ECS
          echo ECS_CLUSTER=${EcsCluster} >> /etc/ecs/ecs.config

          # mount root volume
          mkdir /opt/minecraft
          mount -t efs ${EfsMCRoot}:/ /opt/minecraft
          chown ec2-user:ec2-user /opt/minecraft

          # ### THIS EFS MOUNT APPROACH DOESN'T WORK WITH DOCKER no clue why :anger:
          # mount modpacks volume
          #mkdir /opt/modpacks
          #mount -t efs ${EfsMCModpacks}:/ /opt/modpacks
          #chown ec2-user:ec2-user /opt/modpacks

          # ### ...SO TRY THIS INSTEAD :/
          mkdir -p /tmp/modpacks

          # download curseforge modpack, if configured to use one
          # https://gs-mc.s3.us-east-2.amazonaws.com/Enigmatica6Server-0.5.6.zip
          if [ -n "${CurseForgeModpackS3Key}" ] ; then
            echo "* Downloading curseforge modpack from s3://${CurseForgeModpackS3Bucket}/${CurseForgeModpackS3Key}"
            # curl doesn't work :shrug:
            # curl https://${CurseForgeModpackS3Bucket}.s3.${AWS::Region}.amazonaws.com/${CurseForgeModpackS3Key} -o /tmp/modpacks/${CurseForgeModpackS3Key}
            aws s3 cp s3://${CurseForgeModpackS3Bucket}/${CurseForgeModpackS3Key} /tmp/modpacks/
          fi

          # make sure permissions are gtg
          chown ec2-user:ec2-user -R /opt/minecraft
          chmod +r -R /opt/minecraft
          #chmod +r -R /opt/modpacks
          chown ec2-user:ec2-user -R /tmp/modpacks
          chmod +r -R /tmp/modpacks

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
      - MountRootA
      - MountRootB
      #- MountModpacksA
      #- MountModpacksB
    Properties:
      AutoScalingGroupName: !Sub "${AWS::StackName}-asg"
      DesiredCapacity:
        !FindInMap [ServerState, !Ref ServerState, DesiredCapacity]
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: !FindInMap [ServerState, !Ref ServerState, DesiredCapacity]
      MinSize: !FindInMap [ServerState, !Ref ServerState, DesiredCapacity]
      VPCZoneIdentifier:
        - !Ref SubnetA
        - !Ref SubnetB

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Name
          Value: gs-mc
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "route53:*"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - s3:Get*
                  - s3:List*
                Resource:
                  - !Sub "arn:aws:s3:::${CurseForgeModpackS3Bucket}"
                  - !Sub "arn:aws:s3:::${CurseForgeModpackS3Bucket}/*"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AWS::StackName}-cluster"

  EcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: !FindInMap [ServerState, !Ref ServerState, DesiredCapacity]
      ServiceName: !Sub "${AWS::StackName}-ecs-service"
      TaskDefinition: !Ref EcsTask
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0

  EcsTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Volumes:
        - Host:
            SourcePath: /opt/minecraft
          Name: minecraft
        - Host:
            SourcePath: /tmp/modpacks
          Name: modpacks
      ContainerDefinitions:
        - Name: minecraft
          MemoryReservation: 1024
          Image: !Sub "itzg/minecraft-server:${MinecraftImageTag}"
          PortMappings:
            - ContainerPort: 25565
              HostPort: 25565
              Protocol: tcp
          MountPoints:
            - ContainerPath: /data
              SourceVolume: minecraft
              ReadOnly: false
            - ContainerPath: /modpacks
              SourceVolume: modpacks
              ReadOnly: false
          Environment:
            - Name: "EULA"
              Value: "TRUE"
            - !If
              - MinecraftTypeTagProvided
              - Name: "TYPE"
                Value: !Sub "${MinecraftTypeTag}"
              - !Ref "AWS::NoValue"
            - !If
              - CurseForgeModpackS3UrlProvided
              - Name: "CF_SERVER_MOD"
                Value: !Sub "/modpacks/${CurseForgeModpackS3Key}"
              - !Ref "AWS::NoValue"
            - !If
              - AdminPlayerNamesProvided
              - Name: "OPS"
                Value: !Sub "${AdminPlayerNames}"
              - !Ref "AWS::NoValue"
            - !If
              - DifficultyProvided
              - Name: "DIFFICULTY"
                Value: !Sub "${Difficulty}"
              - !Ref "AWS::NoValue"
            - !If
              - WhitelistProvided
              - Name: "WHITELIST"
                Value: !Sub "${Whitelist}"
              - !Ref "AWS::NoValue"
            - !If
              - MinecraftVersionProvided
              - Name: "VERSION"
                Value: !Sub "${MinecraftVersion}"
              - !Ref "AWS::NoValue"
            - !If
              - MemoryProvided
              - Name: "MEMORY"
                Value: !Sub "${Memory}"
              - !Ref "AWS::NoValue"
            - !If
              - SeedProvided
              - Name: "SEED"
                Value: !Sub "${Seed}"
              - !Ref "AWS::NoValue"
            - !If
              - MaxPlayersProvided
              - Name: "MAX_PLAYERS"
                Value: !Sub "${MaxPlayers}"
              - !Ref "AWS::NoValue"
            - !If
              - ViewDistanceProvided
              - Name: "VIEW_DISTANCE"
                Value: !Sub "${ViewDistance}"
              - !Ref "AWS::NoValue"
            - !If
              - GameModeProvided
              - Name: "MODE"
                Value: !Sub "${GameMode}"
              - !Ref "AWS::NoValue"
            - !If
              - LevelTypeProvided
              - Name: "LEVEL_TYPE"
                Value: !Sub "${LevelType}"
              - !Ref "AWS::NoValue"
            - !If
              - EnableRollingLogsProvided
              - Name: "ENABLE_ROLLING_LOGS"
                Value: !Sub "${EnableRollingLogs}"
              - !Ref "AWS::NoValue"
            - !If
              - TimezoneProvided
              - Name: "TZ"
                Value: !Sub "${Timezone}"
              - !Ref "AWS::NoValue"

  # ====================================================
  # SET DNS RECORD
  # ====================================================

  SetDNSRecordLambdaRole:
    Type: AWS::IAM::Role
    Condition: DnsConfigEnabled
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "route53:*"
                Resource: "*"
              - Effect: "Allow"
                Action: "ec2:DescribeInstance*"
                Resource: "*"

  SetDNSRecordLambda:
    Type: "AWS::Lambda::Function"
    Condition: DnsConfigEnabled
    Properties:
      Environment:
        Variables:
          HostedZoneId: !Ref HostedZoneId
          RecordName: !Ref RecordName
      Code:
        ZipFile: |
          import boto3
          import os
          def handler(event, context):
            new_instance = boto3.resource('ec2').Instance(event['detail']['EC2InstanceId'])
            boto3.client('route53').change_resource_record_sets(
              HostedZoneId= os.environ['HostedZoneId'],
              ChangeBatch={
                  'Comment': 'updating',
                  'Changes': [
                      {
                          'Action': 'UPSERT',
                          'ResourceRecordSet': {
                              'Name': os.environ['RecordName'],
                              'Type': 'A',
                              'TTL': 60,
                              'ResourceRecords': [
                                  {
                                      'Value': new_instance.public_ip_address
                                  },
                              ]
                          }
                      },
                  ]
              })
      Description: Sets Route 53 DNS Record for Minecraft
      FunctionName: !Sub "${AWS::StackName}-set-dns"
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt SetDNSRecordLambdaRole.Arn
      Runtime: python3.8
      Timeout: 20

  LaunchEvent:
    Type: AWS::Events::Rule
    Condition: DnsConfigEnabled
    Properties:
      EventPattern:
        source:
          - aws.autoscaling
        detail-type:
          - EC2 Instance Launch Successful
        detail:
          AutoScalingGroupName:
            - !Ref AutoScalingGroup
      Name: !Sub "${AWS::StackName}-instance-launch"
      State: ENABLED
      Targets:
        - Arn: !GetAtt SetDNSRecordLambda.Arn
          Id: !Sub "${AWS::StackName}-set-dns"

  LaunchEventLambdaPermission:
    Type: AWS::Lambda::Permission
    Condition: DnsConfigEnabled
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SetDNSRecordLambda.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LaunchEvent.Arn

Outputs:
  CheckInstanceIp:
    Description: To find your Minecraft instance IP address, visit the following link. Click on the instance to find its Public IP address.
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/ec2/v2/home?region=${AWS::Region}#Instances:tag:aws:autoscaling:groupName=${AutoScalingGroup};sort=tag:Name"
